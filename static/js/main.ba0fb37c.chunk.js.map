{"version":3,"sources":["getUserFromAPI.js","getReviewerFromAPI.js","SettingsComponent/Settings.js","App.js","LocalStorageHandler.js","reportWebVitals.js","index.js"],"names":["getUserFromAPI","userName","setUser","console","log","fetch","then","response","json","data","catch","error","getReviewerFromAPI","settings","setReviewer","setReviewersToChoose","setBlacklisted","blacklist","split","login","repo","filtered","filter","user","includes","blacklisted","Math","floor","random","length","ReviewerHandler","Settings","props","useState","showSettings","SetShowSettings","SetLogin","SetRepo","SetBlacklist","className","type","onChange","event","target","value","onClick","SetSettings","App","def","reviewer","SetReviewer","reviewersToChoose","SetReviewersToChoose","SetBlacklisted","SetUser","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","e","setLocalStorage","name","src","avatar_url","alt","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba0fb37c.chunk.js","sourcesContent":["const getUserFromAPI = (userName, setUser) => {\n  console.log('getUser');\n\n  if (!userName) {\n    return;\n  }\n\n  fetch(`https://api.github.com/users/${userName}`)\n    .then((response) => response.json())\n    .then((data) => setUser(data))\n    .catch((error) => console.error('ошибкя'));\n};\n\nexport default getUserFromAPI;\n","const getReviewerFromAPI = (\n  settings,\n  setReviewer,\n  setReviewersToChoose,\n  setBlacklisted\n) => {\n  console.log('getReviewer');\n\n  const blacklist = settings.blacklist.split(',');\n\n  console.log(blacklist);\n\n  fetch(\n    `https://api.github.com/repos/${settings.login}/${settings.repo}/contributors`\n  )\n    .then((response) => response.json())\n    .then((data) => ReviewerHandler(data))\n    .catch((error) => console.error(error));\n\n  function ReviewerHandler(data) {\n    const filtered = data.filter((user) => !blacklist.includes(user.login));\n    const blacklisted = data.filter((user) => blacklist.includes(user.login));\n    setReviewersToChoose(filtered);\n    setBlacklisted(blacklisted);\n\n    setReviewer(filtered[Math.floor(Math.random() * (filtered.length - 1))]);\n  }\n};\n\nexport default getReviewerFromAPI;\n","import React, { useState } from 'react';\n\nconst Settings = (props) => {\n  const [showSettings, SetShowSettings] = useState(false);\n\n  const [login, SetLogin] = useState(props.settings['login']);\n  const [repo, SetRepo] = useState(props.settings['repo']);\n  const [blacklist, SetBlacklist] = useState(props.settings['blacklist']);\n\n  let settings = null;\n\n  function SaveAndQuit() {\n    props.SetSettings({\n      login: login,\n      repo: repo,\n      blacklist: blacklist,\n    });\n    SetShowSettings(!showSettings);\n  }\n\n  if (showSettings) {\n    settings = (\n      <div className=\"settings__container\">\n        <div className=\"settings__row\">\n          <div className=\"login\">\n            <input\n              type=\"text\"\n              onChange={(event) => SetLogin(event.target.value)}\n              value={login}\n              className=\"input\"\n            />\n          </div>\n        </div>\n        <div className=\"settings__row\">\n          <div className=\"repo\">\n            <input\n              type=\"text\"\n              onChange={(event) => SetRepo(event.target.value)}\n              value={repo}\n              className=\"input\"\n            />\n          </div>\n        </div>\n        <div className=\"settings__row\">\n          <div className=\"blackList\">\n            <input\n              type=\"text\"\n              onChange={(event) => SetBlacklist(event.target.value)}\n              value={blacklist}\n              className=\"input\"\n            />\n          </div>\n        </div>\n        <div className=\"settings__row\">\n          <div className=\"buttons\">\n            <button onClick={() => SaveAndQuit()}>Сохранить и выйти</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings\">\n      <button onClick={() => SetShowSettings(!showSettings)}>Settings</button>\n      {settings}\n    </div>\n  );\n};\n\nexport default Settings;\n","import './App.css';\nimport { setLocalStorage, getFromLocalStorage } from './LocalStorageHandler';\nimport getUserFromAPI from './getUserFromAPI';\nimport getReviewerFromAPI from './getReviewerFromAPI';\nimport Settings from './SettingsComponent/Settings.js';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [reviewer, SetReviewer] = useState(null);\n  const [reviewersToChoose, SetReviewersToChoose] = useState(null);\n  const [blacklisted, SetBlacklisted] = useState(null);\n  const [user, SetUser] = useState(null);\n\n  const [settings, SetSettings] = useState(\n    getFromLocalStorage({\n      login: 'facebook',\n      repo: 'react',\n      blacklist: 'petehunt,zpao,keyz,bgw',\n    })\n  );\n\n  useEffect(() => {\n    setLocalStorage(settings);\n  }, [settings]);\n\n  function settingsHandler(settings) {\n    SetSettings(settings);\n  }\n\n  const getRewiever = () => {\n    getUserFromAPI(settings.login, SetUser);\n    getReviewerFromAPI(\n      settings,\n      SetReviewer,\n      SetReviewersToChoose,\n      SetBlacklisted\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <div className=\"buttons\">\n          <button onClick={() => getRewiever()}>Поиск ревьюера</button>\n          <Settings settings={settings} SetSettings={settingsHandler} />\n        </div>\n        <hr />\n        <div className=\"results\">\n          <div className=\"user-container\">\n            {user && (\n              <div className=\"user\">\n                user name: {user.name}\n                <hr />\n                <img src={user.avatar_url} alt=\"\" />\n                <hr />\n              </div>\n            )}\n            {!user && 'user is null'}\n          </div>\n          <div className=\"reviewer-container\">\n            {reviewer && (\n              <div className=\"reviewer\">\n                reviewer name: {reviewer.login}\n                <hr />\n                <img src={reviewer.avatar_url} alt=\"\" />\n              </div>\n            )}\n            {!reviewer && 'reviewer is null'}\n          </div>\n        </div>\n        <div className=\"rewiewers-to-choose\">\n          <p>Выбран из следующего списка:</p>\n          <ul>\n            {reviewersToChoose &&\n              reviewersToChoose.map((user, index) => {\n                return <li key={index}>{user.login}</li>;\n              })}\n            {!reviewersToChoose && 'reviewersToChoose is null'}\n          </ul>\n        </div>\n        <hr />\n        <div className=\"blacklisted\">\n          <p>Следующие логины из ревьюеров оказались в черном списке</p>\n          <ul>\n            {blacklisted &&\n              blacklisted.map((user, index) => {\n                return <li key={index}>{user.login}</li>;\n              })}\n            {!blacklisted && 'blacklisted is null'}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export function setLocalStorage(settings) {\n  try {\n    localStorage.setItem('settings', JSON.stringify(settings));\n  } catch (e) {\n    console.error('Возникла ошибка:', e);\n  }\n}\nexport function getFromLocalStorage(def) {\n  return localStorage.getItem('settings')\n    ? JSON.parse(localStorage.getItem('settings'))\n    : def;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}